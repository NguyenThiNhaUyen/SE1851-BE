package com.quyet.superapp.init;

import com.quyet.superapp.entity.BloodComponent;
import com.quyet.superapp.enums.BloodComponentType;
import com.quyet.superapp.repository.BloodComponentRepository;
import lombok.RequiredArgsConstructor;
import org.springframework.boot.CommandLineRunner;
import org.springframework.stereotype.Component;

import java.util.Arrays;
import java.util.List;

@Component
@RequiredArgsConstructor
public class BloodComponentInitializer implements CommandLineRunner {

    private final BloodComponentRepository bloodComponentRepository;

    @Override
    public void run(String... args) {
        if (bloodComponentRepository.count() > 0) {
            System.out.println("üîÅ Th√†nh ph·∫ßn m√°u ƒë√£ t·ªìn t·∫°i, b·ªè qua insert.");
            return;
        }

        List<BloodComponent> components = Arrays.asList(
                BloodComponent.builder()
                        .name("H·ªìng c·∫ßu")
                        .code("RBC")
                        .storageTemp("2-6¬∞C")
                        .storageDays(42)
                        .usage("Truy·ªÅn cho ng∆∞·ªùi thi·∫øu m√°u")
                        .isApheresisCompatible(true)
                        .type(BloodComponentType.RED_BLOOD_CELLS)
                        .build(),

                BloodComponent.builder()
                        .name("Ti·ªÉu c·∫ßu")
                        .code("PLT")
                        .storageTemp("20-24¬∞C")
                        .storageDays(5)
                        .usage("Truy·ªÅn cho ng∆∞·ªùi gi·∫£m ti·ªÉu c·∫ßu")
                        .isApheresisCompatible(true)
                        .type(BloodComponentType.PLATELETS)
                        .build(),

                BloodComponent.builder()
                        .name("Huy·∫øt t∆∞∆°ng")
                        .code("PLAS")
                        .storageTemp("-18¬∞C")
                        .storageDays(365)
                        .usage("ƒêi·ªÅu tr·ªã r·ªëi lo·∫°n ƒë√¥ng m√°u")
                        .isApheresisCompatible(false)
                        .type(BloodComponentType.PLASMA)
                        .build()
        );

        bloodComponentRepository.saveAll(components);
        System.out.println("‚úÖ ƒê√£ kh·ªüi t·∫°o 3 th√†nh ph·∫ßn m√°u: H·ªìng c·∫ßu, Ti·ªÉu c·∫ßu, Huy·∫øt t∆∞∆°ng.");
    }
}
